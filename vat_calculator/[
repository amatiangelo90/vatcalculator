(

     th
>[
(

      (    c C   (     >[
(

un(leNot>[
(

     th
>[ets(iconu(l ? S>[ets(x((

ve(svg",
 Stack(
            th: 25   ss
   l     leti      ad  
ndl No        
da
   nadda
       n  dg In  
ndl ),  RBn0,          a            s     chndl ),      n  BuOrner                 icon: SvgPicture.asset(
                        "assets/icons/draft.svg",
              
bui   (       : 2),!= nu),(     
    nt
  
(   nt
 k  st(mW  
  
          tlor
         tl  I        I    
       I        Ic  In
 oud kIn   enI            I     ot ouer.setShowIvaButtonT             conte   ga             conte   as           te crnte cr e       o  
 I   te crnte cr e       o  
 I  me I   te crnte cr e       I    ) In   I    ) In       
ns    );
Bo  }

th
 10,    n(

n   Bo   Bo  }

.0,
        
n   Bo   ri
  
th
 aButdl No
 _
dB
n(wiBo  }

  rdedsLnst
  n  
)> 9) 
t  t  a     }

   
  n
      
             
    :  .0              fiee.c rr 0e,
                   },     c         ?  hi ),
>[
(

                 const Icon(
                        Icons.brightness_1,
                        size: 16,
                        color: Colors.orange,
                      ),
                      Positioned(
                        right:
                        dataBundleNotifier.currentDraftOrdersList.length >
                            9
                            ? 3.0
                            : 5.0,
                        top: 2,
                        child: Center(
                          child: Text(
                            dataBundleNotifier.currentDraftOrdersList.length
                                .toString(),
                            style: const TextStyle(
                                fontSize: 8.0, color: Colors.white),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),

              ],
            ),
          ],
          iconTheme: const IconThemeData(color: kCustomWhite),
          centerTitle: true,
          title: Column(
            children: [
              Text(
                'Ordini',
                style: TextStyle(
                  fontSize: getProportionateScreenWidth(17),
                  color: Colors.white,
                ),
              ),
              Text(
                'Area gestione ordini',
                style: TextStyle(
                  fontSize: getProportionateScreenWidth(10),
                  color: kCustomEvidenziatoreGreen,
                ),
              ),
            ],
          ),
          backgroundColor: kPrimaryColor,
        );
      case 3:
        return AppBar(
          iconTheme: const IconThemeData(color: kCustomWhite),
          centerTitle: true,
          title: Text(
            'Gestione',
            style: TextStyle(
              fontSize: getProportionateScreenWidth(19),
              color: Colors.white,
            ),
          ),
          backgroundColor: kPrimaryColor,
        );
    }
  }

  void buildStorageChooserDialog(BuildContext context, DataBundleNotifier dataBundleNotifier) {
    showDialog(
        context: context,
        builder: (_) => AlertDialog(
          contentPadding: EdgeInsets.zero,
          shape: const RoundedRectangleBorder(
              borderRadius: BorderRadius.all(Radius.circular(10.0))),
          content: Builder(
            builder: (context) {
              var width = MediaQuery.of(context).size.width;
              return SizedBox(

                width: width,
                child: SingleChildScrollView(
                  scrollDirection: Axis.vertical,
                  child: Column(
                    children: [
                      Container(
                        decoration: const BoxDecoration(
                          borderRadius: BorderRadius.only(
                              topRight: Radius.circular(10.0),
                              topLeft: Radius.circular(10.0)),
                          color: kPrimaryColor,
                        ),
                        child: Row(
                          mainAxisAlignment:
                          MainAxisAlignment.spaceBetween,
                          children: [
                            Text(
                              '  Lista Magazzini',
                              style: TextStyle(
                                fontSize:
                                getProportionateScreenWidth(17),
                                color: Colors.white,
                              ),
                            ),
                            IconButton(
                              icon: const Icon(
                                Icons.clear,
                                color: Colors.white,
                              ),
                              onPressed: () {
                                Navigator.pop(context);
                              },
                            ),
                          ],
                        ),
                      ),

                      Column(
                        children: buildListStorages(
                            dataBundleNotifier, context),
                      ),

                    ],
                  ),
                ),
              );
            },
          ),
        ));
  }

  buildListStorages(DataBundleNotifier dataBundleNotifier, context) {
    List<Widget> storagesWidgetList = [];

    dataBundleNotifier.currentStorageList.forEach((currentStorageElement) {
      storagesWidgetList.add(
        GestureDetector(
          child: Container(
            decoration: BoxDecoration(
              color: dataBundleNotifier.currentStorage.name ==
                  currentStorageElement.name
                  ? kPrimaryColor
                  : Colors.white,
              border: const Border(
                bottom: BorderSide(width: 1.0, color: Colors.grey),
              ),
            ),
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Row(
                    children: [
                      IconButton(icon: SvgPicture.asset('assets/icons/storage.svg', color: kCustomGreenAccent, width: getProportionateScreenWidth(25),), ),
                      Text(
                        '   ' + currentStorageElement.name,
                        style: TextStyle(
                            fontSize: dataBundleNotifier.currentStorage.name ==
                                currentStorageElement.name
                                ? getProportionateScreenWidth(16)
                                : getProportionateScreenWidth(13),
                            color: dataBundleNotifier.currentStorage.name ==
                                currentStorageElement.name
                                ? Colors.white
                                : Colors.black,
                            fontWeight: FontWeight.bold
                        ),
                      ),
                    ],
                  ),

                ],
              ),
            ),
          ),
          onTap: () {
            //EasyLoading.show();
            dataBundleNotifier.setCurrentStorage(currentStorageElement);
            //EasyLoading.dismiss();
            Navigator.pop(context);
          },
        ),
      );
    });
    storagesWidgetList.add(
      Padding(
        padding: const EdgeInsets.all(8.0),
        child: SizedBox(
          height: getProportionateScreenHeight(50),
          width: MediaQuery.of(context).size.width,
          child: CupertinoButton(
            child: Text('Crea Magazzino'),
            color: kCustomGreenAccent,
            onPressed: () {
              Navigator.pop(context);
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => AddStorageScreen(
                    branch: dataBundleNotifier.currentBranch,
                  ),
                ),
              );
            },
          ),
        ),
      ),
    );
    return storagesWidgetList;
  }

  @override
  Ticker createTicker(TickerCallback onTick) {
    return Ticker(onTick);
  }
}





